// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int          @id @default(autoincrement())
  email          String       @unique
  password       String
  name           String?
  avatarUrl      String?
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt

  enrollments    Enrollment[]
}

model Program {
  id            Int          @id @default(autoincrement())
  name          String
  description   String?
  durationWeeks Int?
  difficulty    String?
  thumbnailUrl  String?
  days          ProgramDay[]

  enrollments   Enrollment[]
}

model ProgramDay {
  id          Int        @id @default(autoincrement())
  dayNumber   Int
  description String?
  programId   Int
  program     Program    @relation(fields: [programId], references: [id])
  exercises   Exercise[]
}

model Exercise {
  id           Int        @id @default(autoincrement())
  name         String
  sets         Int?
  reps         Int?
  restSeconds  Int?
  programDayId Int
  programDay   ProgramDay @relation(fields: [programDayId], references: [id])
}

model Enrollment {
  id        Int      @id @default(autoincrement())
  userId    Int
  programId Int
  startedAt DateTime @default(now())
  progress  Float    @default(0)

  user     User    @relation(fields: [userId], references: [id])
  program  Program @relation(fields: [programId], references: [id])

  @@unique([userId, programId])
}
